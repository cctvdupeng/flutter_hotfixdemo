def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '2.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:design:28.0.0'

    // 多dex配置
    implementation "com.android.support:multidex:1.0.1"
    // 集成Bugly热更新aar（本地集成使用方式）
    //compile(name: 'bugly_crashreport_upgrade-1.3.2', ext: 'aar')
    // 远程仓库集成方式（推荐）
    //compile 'com.tencent.bugly:crashreport_upgrade:1.3.8'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    //1. 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    //2.为了便于解答问题，这里的tinker版本建议跟随此处demo设置，如果微信更新了tinker版本，bugly会定期同步更新
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    // walle（多渠道使用）
    // compile 'com.meituan.android.walle:library:1.1.3'
}

android {
    compileSdkVersion 28

    // 编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // recommend
    dexOptions {
        jumboMode = true
    }

    // 签名配置
    signingConfigs {
        release {
            try {
                storeFile file("./keystore/release.keystore")
                storePassword "testres"
                keyAlias "testres"
                keyPassword "testres"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "io.tick.flutter_hotfixdemo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode /*flutterVersionCode.toInteger()*/ 2
        versionName /*flutterVersionName*/ '2.0'
        // 开启multidex
        multiDexEnabled true
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters /*'x86', */ 'armeabi-v7a', /*'x86_64', */ 'arm64-v8a', 'armeabi'
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters /*'x86', */ 'armeabi-v7a', /*'x86_64',*/ 'arm64-v8a', 'armeabi'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        abortOnError false
    }
}

// 依赖插件脚本
apply from: 'tinker-support.gradle'

flutter {
    source '../..'
}


